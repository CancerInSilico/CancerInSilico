% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CellSimulation.R
\name{runCellSimulation}
\alias{runCellSimulation}
\title{\code{runCancerSim} Runs a cancer simulation given parameters}
\usage{
runCellSimulation(initialNum, runTime, density, modelType = "DrasdoHohme",
  ...)
}
\arguments{
\item{initialNum}{how many cells initially}

\item{runTime}{how long the simulation runs in real cellular time (hours)}

\item{density}{the density the cells are seeded at}

\item{modelType}{the name of the cell-based model to use}

\item{...}{model specific parameters (depends on modelType)}

\item{cellTypes}{an array of S4 objects (each representing a different
cell type)}

\item{cycleLengthDist}{cycle time distribution}

\item{drugEffect}{distribution of drug effects}

\item{inheritGrowth}{whether or not daughter cells have the same
cycle-length as parents}

\item{outputIncrement}{time increment to print status at}

\item{randSeed}{seed for the model}

\item{cycleSyncProb}{the probability of cells being seed in interphase
(not mitosis)}
}
\value{
A CellModel containing all info from the model run
}
\description{
\code{runCancerSim} Runs a cancer simulation given parameters
}
\details{
This function provides a centralized R interface to run c++
code for cell-based models implemented in this package. Standard
parameters, as well as model-specific parameters, are passed in to this
function along with a model name. This function then runs the model and
returns a CellModel object containing all of the information from the
model. This object can then be accessed with various functions designed
to interact with the class. To see a list of available functions, there
is a show() command implemented for CellModel objects.
}
\examples{
runCancerSim(1,8)
}
